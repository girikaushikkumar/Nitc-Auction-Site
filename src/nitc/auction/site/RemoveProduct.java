/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nitc.auction.site;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.time.format.DateTimeParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author girik
 */
public class RemoveProduct extends javax.swing.JFrame {

    /**
     * Creates new form RemoveProduct
     */
    String ruserId="";
    Student student=new Student();
    public RemoveProduct() {
        initComponents();
        
        SellerDashboard sd =new SellerDashboard();
        sd.suserId=ruserId;
        
        
    }
    
    public void ShowProduct()
    {
        DefaultTableModel tableModel;
        tableModel=(DefaultTableModel) pdtTable.getModel(); 
         int rows = tableModel.getRowCount(); 
         for(int i = rows - 1; i >=0; i--)
         {
            tableModel.removeRow(i); 
         }
         
         
        ResultSet rss = student.showProduct(ruserId);
        
        try {
            while(rss.next())
            {
//                category, subcategory, pdt_id, pdt_name, brand, pdt_info, price
                String category=rss.getString("category");
                
                String ProductId=rss.getString("pdt_id");
                String ProductName=rss.getString("pdt_name");
                String Price=rss.getString("price");
                String TimeEnd=rss.getString("time_end");
                String Status=rss.getString("status");
                
                String tableData[]={category, ProductId, ProductName, Price, TimeEnd, Status};
                
                tableModel.addRow(tableData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(RemoveProduct.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        catadd1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pdtId = new javax.swing.JTextField();
        pdtName = new javax.swing.JTextField();
        pdtupdate = new javax.swing.JButton();
        pdtDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pdtTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        pdtDate = new com.toedter.calendar.JDateChooser();
        pdtTime = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        img1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        catadd1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        catadd1.setForeground(new java.awt.Color(255, 0, 0));
        catadd1.setText("X");
        catadd1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                catadd1MouseClicked(evt);
            }
        });
        getContentPane().add(catadd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 10, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/auction/image/previous.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 40, 30));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0, 80));
        jPanel1.setToolTipText("");
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 0, 0, 80));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Product Id");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name");

        pdtId.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pdtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdtIdActionPerformed(evt);
            }
        });

        pdtName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pdtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdtNameActionPerformed(evt);
            }
        });

        pdtupdate.setBackground(new java.awt.Color(0, 0, 0));
        pdtupdate.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        pdtupdate.setForeground(new java.awt.Color(255, 255, 255));
        pdtupdate.setText("Update");
        pdtupdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateProduct(evt);
            }
        });

        pdtDelete.setBackground(new java.awt.Color(0, 0, 0));
        pdtDelete.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        pdtDelete.setForeground(new java.awt.Color(255, 255, 255));
        pdtDelete.setText("Delete");
        pdtDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteProduct(evt);
            }
        });
        pdtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdtDeleteActionPerformed(evt);
            }
        });

        pdtTable.setBackground(new java.awt.Color(102, 102, 102));
        pdtTable.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        pdtTable.setForeground(new java.awt.Color(255, 255, 255));
        pdtTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category Type", "Product Id", "Product Name", "Price", "Session End Time", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pdtTable.setDoubleBuffered(true);
        pdtTable.setName(""); // NOI18N
        pdtTable.setRowHeight(40);
        pdtTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        pdtTable.setShowGrid(false);
        pdtTable.setShowHorizontalLines(true);
        pdtTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pdtTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(pdtTable);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Price");

        price.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("End Time");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("End Date");

        pdtTime.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pdtTime.setText("HH:MM");
        pdtTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pdtTimeMouseClicked(evt);
            }
        });

        jPanel3.setLayout(null);

        img1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2));
        img1.setName(""); // NOI18N
        jPanel3.add(img1);
        img1.setBounds(0, 0, 233, 199);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pdtDelete)
                        .addGap(138, 138, 138)
                        .addComponent(pdtupdate))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(147, 147, 147)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pdtName, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(107, 107, 107)
                                .addComponent(pdtId, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel2))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pdtDate, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(pdtTime))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(137, 137, 137))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pdtId, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addComponent(pdtDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pdtName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(pdtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pdtupdate)
                            .addComponent(pdtDelete))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))))
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("View Product");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(524, 524, 524)
                .addComponent(jLabel6)
                .addContainerGap(586, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 1260, 680));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/auction/image/new background.jpg"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pdtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pdtIdActionPerformed

    private void pdtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pdtNameActionPerformed

    private void DeleteProduct(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteProduct
        if(pdtName.getText().isEmpty() || pdtId.getText().isEmpty())
           JOptionPane.showMessageDialog(this, "Missing Information");
        else{
            try{
                Connection con=DBConnection.connectDB();

                java.sql.Statement st = con.createStatement();
                int executeUpdate = st.executeUpdate("delete from product where pdt_id='"+pdtId.getText()+"'");
                
                JOptionPane.showMessageDialog(this,"Deleted successfully");
                ShowProduct();
            }catch(HeadlessException | NumberFormatException | SQLException ex){
                Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_DeleteProduct

    private void pdtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdtDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pdtDeleteActionPerformed

    private void pdtTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pdtTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)pdtTable.getModel();
        int row = pdtTable.getSelectedRow();
        
        pdtName.setText(model.getValueAt(row, 2).toString());
        pdtId.setText(model.getValueAt(row, 1).toString());
        price.setText(model.getValueAt(row, 3).toString());
        String DateTime = model.getValueAt(row, 4).toString();
        String split[] = DateTime.split("-");
        String EndDate = split[0]+"-"+split[1]+"-"+split[2];
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy");
        
        try {
        Date date = formatter.parse(EndDate);
        System.out.println(date);
         pdtDate.setDate(date);
        System.out.println(formatter.format(date));
        }catch (Exception e) {
        e.printStackTrace();
        }
       
        pdtTime.setText(split[3]);
        //Show Image
        ResultSet rs = null;
        Connection con = DBConnection.connectDB();
        try {
            PreparedStatement st= con.prepareStatement("select * from product where pdt_id='"+pdtId.getText()+"'");
            rs = st.executeQuery();
        } catch (SQLException ex) {
            Logger.getLogger(RemoveProduct.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
         
            if(rs.next()){
                byte[] img = rs.getBytes("image");
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage();
                Image myimg = im.getScaledInstance(img1.getWidth(), img1.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(myimg);
                img1.setIcon(newImage);
            }
        } catch (SQLException ex) {
            Logger.getLogger(RemoveProduct.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pdtTableMouseClicked

    private void UpdateProduct(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateProduct
        if(pdtId.getText().isEmpty())
        JOptionPane.showMessageDialog(this, "Missing Information");

        try {
            Connection con=DBConnection.connectDB();
            String selectdate = ((JTextField)pdtDate.getDateEditor().getUiComponent()).getText();
            
             try {
                    LocalTime.parse(pdtTime.getText());
                    String endtime = selectdate + "-" + pdtTime.getText();
                    String query="update product set price='"+price.getText()+"', time_end='"+endtime+"' where pdt_id='"+pdtId.getText()+"'";
                    java.sql.Statement st;
                    st = con.createStatement();
                    st.executeUpdate(query);
                    ShowProduct();
                    JOptionPane.showMessageDialog(this,"Updated successfully");
                } catch (DateTimeParseException | NullPointerException e) {
                    JOptionPane.showMessageDialog(this, "Use Proper time format");
                    pdtTime.setText("HH:MM");
                    e.printStackTrace();
                }
            
        } catch (SQLException ex) {
            Logger.getLogger(ManageCategories.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_UpdateProduct

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        SellerDashboard sd =new SellerDashboard();
        sd.suserId=ruserId;
        sd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void catadd1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_catadd1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_catadd1MouseClicked

    private void pdtTimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pdtTimeMouseClicked
        pdtTime.setText("");
    }//GEN-LAST:event_pdtTimeMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
       
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        
    }//GEN-LAST:event_jPanel1MouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        ShowProduct();
    }//GEN-LAST:event_formComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoveProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoveProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoveProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoveProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RemoveProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton catadd1;
    private javax.swing.JLabel img1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser pdtDate;
    private javax.swing.JButton pdtDelete;
    private javax.swing.JTextField pdtId;
    private javax.swing.JTextField pdtName;
    private javax.swing.JTable pdtTable;
    private javax.swing.JTextField pdtTime;
    private javax.swing.JButton pdtupdate;
    private javax.swing.JTextField price;
    // End of variables declaration//GEN-END:variables
}
